// Beta Version 1.1 by Simone Luise - infoWishlist@simoneluise.com - http://www.simoneluise.com
// Dev version & documentation: http://github.com/Frogmouth/jQuery.Wishlist

(function($){window.wishlist={};window.wishlist.debug=false;$.fn.wishlist=function(options){var that=this;var settings=$.extend({cookieName:that.attr("id"),BackboneModel:{defaults:{id:null,}},BackboneCollection:{},removeClass:"removeToWish",addClass:"addToWish",triggerClass:"wishAction",clearId:"clearWish",triggerEvent:["click","click"],loadOverride:null,removeOverride:null,clearAllCallback:null,wishTriggerFunction:null,unbindAll:null,debug:false,text:{noCookies:"Questa funzione Ã¨ utilizzabile solo con cookies attivi.",add:"Aggiungi ",remove:"Rimuovi "}},options);if(typeof window.wishlist[settings.cookieName]!="undefined"){settings.cookieName="_"+settings.cookieName;var nameError=1}if(settings.debug==true){console.log("Inizio Debug");if(typeof _=="undefined"){console.log("Undescrore: Not Found!")}else{console.log("Underscore: Ready!")}if(typeof Backbone=="undefined"){console.log("Backbone: Not Found!")}else{console.log("Backbone: Ready!")}if(typeof nameError!="undefined"){console.log("Cookie's name already in use: change it please. the name is change in '_yourcookiename'")}console.log("Nessun Errore trovato nei settaggi")}that.cookiesList=$.cookie(settings.cookieName);(settings.debug)?console.log('Cookie Rilevato:',that.cookiesList):null;laodWishlist=(typeof settings.loadCallback=="function")?settings.loadOverride:function(){that.wishList.forEach(function(value,key){var iId=value.id;var $item=$("#wItem_"+value.id);if($item.length<1){that.append("<li data-id='"+iId+"' id='wItem_"+iId+"'>"+iId+"</li>");$("."+settings.addClass+"[data-id='"+iId+"']").addClass(settings.removeClass).removeClass(settings.addClass).text(settings.text.remove+iId)}else{$item.data("id",iId);$item.text(iId);$item.attr("id","wItem_"+iId)}})}removeCallback=(typeof settings.removeCallback=="function")?settings.removeOverride:function(item,id){item.removeClass(settings.removeClass).addClass(settings.addClass).text(settings.text.add+id);$("#wItem_"+id).remove()}clearAllCallback=(typeof settings.clearAllCallback=="function")?settings.clearAllCallback:function(){that.wishList.forEach(function(value){removeCallback($("a[data-id='"+value.id+"']"),value.id)});that.wishList.remove(that.wishList.models);window.wishlist[settings.cookieName]=that.wishList;$("#"+settings.cookieName+" > li").remove()}bindAllEvent=function(){$("."+settings.triggerClass).on(settings.triggerEvent[0]+".triggerEvent",function(event){event.preventDefault();if(typeof settings.WishTriggerFunction=="function"){settings.WishTriggerFunction()}else{var nId=$(this).data("id");if($(this).hasClass(settings.removeClass)){removeCallback($(this),nId);that.wishList.remove(that.wishList.get(nId))}else{that.wishList.add({id:nId});laodWishlist()}window.wishlist[settings.cookieName]=that.wishList}window.wishlist[settings.cookieName]=that.wishList;(settings.debug)?console.log('Collection:',that.wishList):null;$.cookie(settings.cookieName,that.wishList.toJSONString(),{expires:7,path:"/"});(settings.debug)?console.log('Cookie:',$.cookie(settings.cookieName)):null});$("#"+settings.clearId).on(settings.triggerEvent[1]+".triggerClear",function(event){event.preventDefault();clearAllCallback();$.removeCookie(settings.cookieName,{path:'/'});(settings.debug)?console.log('Collection:',that.wishList,'Unset cookie:',(typeof $.cookie(settings.cookieName)=="undefined")?true:false):null});$.removeCookie('wishtest',{path:'/'})}unbindAllEvent=(typeof settings.unbindAll=="function")?settings.unbindAll:function(){(settings.debug)?console.log("Error: Can't set cookies"):null;$("#"+settings.clearId,"."+settings.triggerClass).on("click",function(){alert(settings.text.noCookies)})}that.wishCookie=Backbone.Model.extend(settings.BackboneModel);that.wishCookies=Backbone.Collection.extend({model:that.wishCookie});$.cookie('wishtest',1,{path:'/'});($.cookie('wishtest'))?bindAllEvent():unbindAllEvent();window.wishlist[settings.cookieName]=that.wishList=(!that.cookiesList||that.cookiesList==null)?new that.wishCookies():that.wishList=new that.wishCookies(that.cookiesList.parseJSON());laodWishlist();return this}$.wishListToJSON=function(name){if(typeof name=="undefined"){(window.wishlist.debug)?console.log("name arguments needed: ex. $.wishListToJSON('cookiename')"):null;return false}return window.wishlist[name].toJSON()}}(jQuery));
